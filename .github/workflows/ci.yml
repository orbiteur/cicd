name: Symfony CI/CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_ENV: prod
      APP_DEBUG: 0
    environment: cicd

    steps:
      # 1. Checkout code (local copy, juste pour tests/tests unitaires)
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up PHP for CI tasks
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, zip
          coverage: none

#      # 3. Install Composer dependencies (optionnel si tests locaux)
#      - name: Install dependencies
#        run: |
#          DATABASE_URL=null composer install --no-dev --optimize-autoloader --no-interaction --no-scripts
#
#      # 4. Run tests (optionnel)
#      - name: Run tests
#        run: php bin/phpunit
#
      - name: Print SERVER_HOST (debug)
        run: |
          if [ -z "${{ secrets.SERVER_HOST }}" ]; then
            echo "SERVER_HOST is NOT set"
          else
            echo "${{ secrets.SERVER_HOST }}" | md5sum
          fi

          if [ -z "${{ secrets.SERVER_USER }}" ]; then
            echo "SERVER_USER is NOT set"
          else
            echo "${{ secrets.SERVER_USER }}" | md5sum
          fi

          if [ -z "${{ secrets.SERVER_PASSWORD }}" ]; then
            echo "SERVER_PASSWORD is NOT set"
          else
            echo "${{ secrets.SERVER_PASSWORD }}" | md5sum
          fi

          if [ -z "${{ secrets.SERVER_KEY }}" ]; then
            echo "SERVER_PASSWORD is NOT set"
          else
            echo "${{ secrets.SERVER_KEY }}" | md5sum
          fi

      # 5. Deploy to server via SSH
      - name: whoami
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: whoami

      # 5. Deploy to server via SSH
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd ~/cicd
            GIT_SSH_COMMAND="ssh -i ~/.ssh/id_orbiteur -o StrictHostKeyChecking=no" git pull origin master
            composer install --no-dev --optimize-autoloader --no-interaction --no-scripts
            php bin/console doctrine:schema:update --force --env=prod
            php bin/console cache:clear --env=prod
            php bin/console cache:warmup --env=prod
